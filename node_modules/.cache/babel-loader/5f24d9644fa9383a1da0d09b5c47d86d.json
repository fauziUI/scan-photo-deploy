{"ast":null,"code":"import React, { useCallback, Fragment, useRef, useEffect, useState, useImperativeHandle } from 'react';\nimport { useOpenCv, OpenCvProvider } from 'opencv-react';\nimport T from 'prop-types';\nimport Draggable from 'react-draggable';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar readFile = function readFile(file) {\n  if (file instanceof File) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        resolve(reader.result);\n      };\n\n      reader.onerror = function (err) {\n        reject(err);\n      };\n\n      reader.readAsDataURL(file);\n    });\n  }\n\n  if (typeof file === 'string') {\n    return Promise.resolve(file);\n  }\n};\n\nvar calcDims = function calcDims(width, height, externalMaxWidth, externalMaxHeight) {\n  var ratio = width / height;\n  var maxWidth = externalMaxWidth || window.innerWidth;\n  var maxHeight = externalMaxHeight || window.innerHeight;\n  var calculated = {\n    width: maxWidth,\n    height: Math.round(maxWidth / ratio),\n    ratio: ratio\n  };\n\n  if (calculated.height > maxHeight) {\n    calculated.height = maxHeight;\n    calculated.width = Math.round(maxHeight * ratio);\n  }\n\n  return calculated;\n};\n\nvar buildCropPointStyle = function buildCropPointStyle(size, pointBgColor, pointBorder) {\n  return {\n    width: size,\n    height: size,\n    backgroundColor: pointBgColor,\n    border: pointBorder,\n    borderRadius: '100%',\n    position: 'absolute',\n    zIndex: 1001\n  };\n};\n\nvar CropPoint = function CropPoint(_ref) {\n  var cropPoints = _ref.cropPoints,\n      pointArea = _ref.pointArea,\n      defaultPosition = _ref.defaultPosition,\n      pointSize = _ref.pointSize,\n      _ref$pointBgColor = _ref.pointBgColor,\n      pointBgColor = _ref$pointBgColor === void 0 ? 'transparent' : _ref$pointBgColor,\n      _ref$pointBorder = _ref.pointBorder,\n      pointBorder = _ref$pointBorder === void 0 ? '4px solid #3cabe2' : _ref$pointBorder,\n      externalOnStop = _ref.onStop,\n      externalOnDrag = _ref.onDrag,\n      bounds = _ref.bounds;\n  var onDrag = useCallback(function (_, position) {\n    externalOnDrag(_extends({}, position, {\n      x: position.x + pointSize / 2,\n      y: position.y + pointSize / 2\n    }), pointArea);\n  }, [externalOnDrag]);\n  var onStop = useCallback(function (_, position) {\n    externalOnStop(_extends({}, position, {\n      x: position.x + pointSize / 2,\n      y: position.y + pointSize / 2\n    }), pointArea, cropPoints);\n  }, [externalOnDrag, cropPoints]);\n  return /*#__PURE__*/React.createElement(Draggable, {\n    bounds: bounds,\n    defaultPosition: defaultPosition,\n    position: {\n      x: cropPoints[pointArea].x - pointSize / 2,\n      y: cropPoints[pointArea].y - pointSize / 2\n    },\n    onDrag: onDrag,\n    onStop: onStop\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: buildCropPointStyle(pointSize, pointBgColor, pointBorder)\n  }));\n};\n\nCropPoint.propTypes = {\n  cropPoints: T.shape({\n    'left-top': T.shape({\n      x: T.number,\n      y: T.number\n    }).isRequired,\n    'right-top': T.shape({\n      x: T.number,\n      y: T.number\n    }).isRequired,\n    'right-bottom': T.shape({\n      x: T.number,\n      y: T.number\n    }).isRequired,\n    'left-bottom': T.shape({\n      x: T.number,\n      y: T.number\n    }).isRequired\n  }),\n  pointArea: T.oneOf(['left-top', 'right-top', 'right-bottom', 'left-bottom']),\n  defaultPosition: T.shape({\n    x: T.number,\n    y: T.number\n  }),\n  pointSize: T.number,\n  pointBgColor: T.string,\n  pointBorder: T.string,\n  onStop: T.func,\n  onDrag: T.func\n};\n\nvar CropPoints = function CropPoints(props) {\n  var previewDims = props.previewDims,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"previewDims\"]);\n\n  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(CropPoint, _extends({\n    pointArea: \"left-top\",\n    defaultPosition: {\n      x: 0,\n      y: 0\n    }\n  }, otherProps)), /*#__PURE__*/React.createElement(CropPoint, _extends({\n    pointArea: \"right-top\",\n    defaultPosition: {\n      x: previewDims.width,\n      y: 0\n    }\n  }, otherProps)), /*#__PURE__*/React.createElement(CropPoint, _extends({\n    pointArea: \"right-bottom\",\n    defaultPosition: {\n      x: 0,\n      y: previewDims.height\n    }\n  }, otherProps)), /*#__PURE__*/React.createElement(CropPoint, _extends({\n    pointArea: \"left-bottom\",\n    defaultPosition: {\n      x: previewDims.width,\n      y: previewDims.height\n    }\n  }, otherProps)));\n};\n\nCropPoints.propTypes = {\n  previewDims: T.shape({\n    ratio: T.number,\n    width: T.number,\n    height: T.number\n  })\n};\n\nvar transform = function transform(cv, docCanvas, cropPoints, imageResizeRatio, setPreviewPaneDimensions) {\n  var _ref, _ref2;\n\n  var dst = cv.imread(docCanvas);\n  var bR = cropPoints['right-bottom'];\n  var bL = cropPoints['left-bottom'];\n  var tR = cropPoints['right-top'];\n  var tL = cropPoints['left-top'];\n  var sourceCoordinates = [tL, tR, bR, bL].map(function (point) {\n    return [point.x / imageResizeRatio, point.y / imageResizeRatio];\n  });\n  var maxWidth = Math.max(bR.x - bL.x, tR.x - tL.x) / imageResizeRatio;\n  var maxHeight = Math.max(bL.y - tL.y, bR.y - tR.y) / imageResizeRatio;\n  var destCoordinates = [[0, 0], [maxWidth - 1, 0], [maxWidth - 1, maxHeight - 1], [0, maxHeight - 1]];\n  var Ms = cv.matFromArray(4, 1, cv.CV_32FC2, (_ref = []).concat.apply(_ref, sourceCoordinates));\n  var Md = cv.matFromArray(4, 1, cv.CV_32FC2, (_ref2 = []).concat.apply(_ref2, destCoordinates));\n  var transformMatrix = cv.getPerspectiveTransform(Ms, Md);\n  var dsize = new cv.Size(maxWidth, maxHeight);\n  cv.warpPerspective(dst, dst, transformMatrix, dsize, cv.INTER_LINEAR, cv.BORDER_CONSTANT, new cv.Scalar());\n  cv.imshow(docCanvas, dst);\n  dst[\"delete\"]();\n  Ms[\"delete\"]();\n  Md[\"delete\"]();\n  transformMatrix[\"delete\"]();\n  setPreviewPaneDimensions();\n};\n\nvar applyFilter = function applyFilter(cv, docCanvas, filterCvParams) {\n  try {\n    var options = _extends({\n      blur: false,\n      th: true,\n      thMode: cv.ADAPTIVE_THRESH_MEAN_C,\n      thMeanCorrection: 15,\n      thBlockSize: 25,\n      thMax: 255,\n      grayScale: true\n    }, filterCvParams);\n\n    var dst = cv.imread(docCanvas);\n\n    if (options.grayScale) {\n      cv.cvtColor(dst, dst, cv.COLOR_RGBA2GRAY, 0);\n    }\n\n    if (options.blur) {\n      var ksize = new cv.Size(5, 5);\n      cv.GaussianBlur(dst, dst, ksize, 0, 0, cv.BORDER_DEFAULT);\n    }\n\n    if (options.th) {\n      if (options.grayScale) {\n        cv.adaptiveThreshold(dst, dst, options.thMax, options.thMode, cv.THRESH_BINARY, options.thBlockSize, options.thMeanCorrection);\n      } else {\n        dst.convertTo(dst, -1, 1, 60);\n        cv.threshold(dst, dst, 170, 255, cv.THRESH_BINARY);\n      }\n    }\n\n    cv.imshow(docCanvas, dst);\n    return Promise.resolve();\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nvar CropPointsDelimiters = function CropPointsDelimiters(_ref) {\n  var cropPoints = _ref.cropPoints,\n      previewDims = _ref.previewDims,\n      _ref$lineWidth = _ref.lineWidth,\n      lineWidth = _ref$lineWidth === void 0 ? 3 : _ref$lineWidth,\n      _ref$lineColor = _ref.lineColor,\n      lineColor = _ref$lineColor === void 0 ? '#3cabe2' : _ref$lineColor,\n      pointSize = _ref.pointSize;\n  var canvas = useRef();\n  var clearCanvas = useCallback(function () {\n    var ctx = canvas.current.getContext('2d');\n    ctx.clearRect(0, 0, previewDims.width, previewDims.height);\n  }, [canvas.current, previewDims]);\n  var sortPoints = useCallback(function () {\n    var sortOrder = ['left-top', 'right-top', 'right-bottom', 'left-bottom'];\n    return sortOrder.reduce(function (acc, pointPos) {\n      return [].concat(acc, [cropPoints[pointPos]]);\n    }, []);\n  }, [cropPoints]);\n  var drawShape = useCallback(function (_ref2) {\n    var point1 = _ref2[0],\n        point2 = _ref2[1],\n        point3 = _ref2[2],\n        point4 = _ref2[3];\n    var ctx = canvas.current.getContext('2d');\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n    ctx.beginPath();\n    ctx.moveTo(point1.x + pointSize / 2, point1.y);\n    ctx.lineTo(point2.x - pointSize / 2, point2.y);\n    ctx.moveTo(point2.x, point2.y + pointSize / 2);\n    ctx.lineTo(point3.x, point3.y - pointSize / 2);\n    ctx.moveTo(point3.x - pointSize / 2, point3.y);\n    ctx.lineTo(point4.x + pointSize / 2, point4.y);\n    ctx.moveTo(point4.x, point4.y - pointSize / 2);\n    ctx.lineTo(point1.x, point1.y + pointSize / 2);\n    ctx.closePath();\n    ctx.stroke();\n  }, [canvas.current]);\n  useEffect(function () {\n    if (cropPoints && canvas.current) {\n      clearCanvas();\n      var sortedPoints = sortPoints();\n      drawShape(sortedPoints);\n    }\n  }, [cropPoints, canvas.current]);\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvas,\n    style: {\n      position: 'absolute',\n      zIndex: 5\n    },\n    width: previewDims.width,\n    height: previewDims.height\n  });\n};\n\nCropPointsDelimiters.propTypes = {\n  previewDims: T.shape({\n    ratio: T.number,\n    width: T.number,\n    height: T.number\n  }),\n  cropPoints: T.shape({\n    'left-top': T.shape({\n      x: T.number,\n      y: T.number\n    }).isRequired,\n    'right-top': T.shape({\n      x: T.number,\n      y: T.number\n    }).isRequired,\n    'right-bottom': T.shape({\n      x: T.number,\n      y: T.number\n    }).isRequired,\n    'left-bottom': T.shape({\n      x: T.number,\n      y: T.number\n    }).isRequired\n  }),\n  lineColor: T.string,\n  lineWidth: T.number,\n  pointSize: T.number\n};\n\nvar buildImgContainerStyle = function buildImgContainerStyle(previewDims) {\n  return {\n    width: previewDims.width,\n    height: previewDims.height\n  };\n};\n\nvar imageDimensions = {\n  width: 0,\n  height: 0\n};\nvar imageResizeRatio;\n\nvar Canvas = function Canvas(_ref) {\n  var _previewCanvasRef$cur, _previewCanvasRef$cur2, _previewCanvasRef$cur3, _previewCanvasRef$cur4, _previewCanvasRef$cur5, _previewCanvasRef$cur6;\n\n  var image = _ref.image,\n      onDragStop = _ref.onDragStop,\n      onChange = _ref.onChange,\n      cropperRef = _ref.cropperRef,\n      _ref$pointSize = _ref.pointSize,\n      pointSize = _ref$pointSize === void 0 ? 30 : _ref$pointSize,\n      lineWidth = _ref.lineWidth,\n      pointBgColor = _ref.pointBgColor,\n      pointBorder = _ref.pointBorder,\n      lineColor = _ref.lineColor,\n      maxWidth = _ref.maxWidth,\n      maxHeight = _ref.maxHeight;\n\n  var _useOpenCv = useOpenCv(),\n      cvLoaded = _useOpenCv.loaded,\n      cv = _useOpenCv.cv;\n\n  var canvasRef = useRef();\n  var previewCanvasRef = useRef();\n  var magnifierCanvasRef = useRef();\n\n  var _useState = useState(),\n      previewDims = _useState[0],\n      setPreviewDims = _useState[1];\n\n  var _useState2 = useState(),\n      cropPoints = _useState2[0],\n      setCropPoints = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState('crop'),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  useImperativeHandle(cropperRef, function () {\n    return {\n      backToCrop: function backToCrop() {\n        setMode('crop');\n      },\n      done: function done(opts) {\n        if (opts === void 0) {\n          opts = {};\n        }\n\n        try {\n          return Promise.resolve(new Promise(function (resolve) {\n            setLoading(true);\n            transform(cv, canvasRef.current, cropPoints, imageResizeRatio, setPreviewPaneDimensions);\n            applyFilter(cv, canvasRef.current, opts.filterCvParams);\n\n            if (opts.preview) {\n              setMode('preview');\n            }\n\n            canvasRef.current.toBlob(function (blob) {\n              blob.name = image.name;\n              resolve(blob);\n              setLoading(false);\n            }, image.type);\n          }));\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      }\n    };\n  });\n  useEffect(function () {\n    if (mode === 'preview') {\n      showPreview();\n    }\n  }, [mode]);\n\n  var setPreviewPaneDimensions = function setPreviewPaneDimensions() {\n    var newPreviewDims = calcDims(canvasRef.current.width, canvasRef.current.height, maxWidth, maxHeight);\n    setPreviewDims(newPreviewDims);\n    previewCanvasRef.current.width = newPreviewDims.width;\n    previewCanvasRef.current.height = newPreviewDims.height;\n    imageResizeRatio = newPreviewDims.width / canvasRef.current.width;\n  };\n\n  var createCanvas = function createCanvas(src) {\n    return new Promise(function (resolve, reject) {\n      var img = document.createElement('img');\n\n      img.onload = function () {\n        try {\n          canvasRef.current = document.createElement('canvas');\n          canvasRef.current.width = img.width;\n          canvasRef.current.height = img.height;\n          var ctx = canvasRef.current.getContext('2d');\n          ctx.drawImage(img, 0, 0);\n          imageDimensions.width = canvasRef.current.width;\n          imageDimensions.height = canvasRef.current.height;\n          setPreviewPaneDimensions();\n          resolve();\n          return Promise.resolve();\n        } catch (e) {\n          return Promise.reject(e);\n        }\n      };\n\n      img.src = src;\n    });\n  };\n\n  var showPreview = function showPreview(image) {\n    var src = image || cv.imread(canvasRef.current);\n    var dst = new cv.Mat();\n    var dsize = new cv.Size(0, 0);\n    cv.resize(src, dst, dsize, imageResizeRatio, imageResizeRatio, cv.INTER_AREA);\n    cv.imshow(previewCanvasRef.current, dst);\n    src[\"delete\"]();\n    dst[\"delete\"]();\n  };\n\n  var detectContours = function detectContours() {\n    var dst = cv.imread(canvasRef.current);\n    var ksize = new cv.Size(5, 5);\n    cv.cvtColor(dst, dst, cv.COLOR_RGBA2GRAY, 0);\n    cv.GaussianBlur(dst, dst, ksize, 0, 0, cv.BORDER_DEFAULT);\n    cv.Canny(dst, dst, 75, 200);\n    cv.threshold(dst, dst, 120, 200, cv.THRESH_BINARY);\n    var contours = new cv.MatVector();\n    var hierarchy = new cv.Mat();\n    cv.findContours(dst, contours, hierarchy, cv.RETR_CCOMP, cv.CHAIN_APPROX_SIMPLE);\n    var rect = cv.boundingRect(dst);\n    dst[\"delete\"]();\n    hierarchy[\"delete\"]();\n    contours[\"delete\"]();\n    Object.keys(rect).forEach(function (key) {\n      rect[key] = rect[key] * imageResizeRatio;\n    });\n    var contourCoordinates = {\n      'left-top': {\n        x: rect.x,\n        y: rect.y\n      },\n      'right-top': {\n        x: rect.x + rect.width,\n        y: rect.y\n      },\n      'right-bottom': {\n        x: rect.x + rect.width,\n        y: rect.y + rect.height\n      },\n      'left-bottom': {\n        x: rect.x,\n        y: rect.y + rect.height\n      }\n    };\n    setCropPoints(contourCoordinates);\n  };\n\n  var clearMagnifier = function clearMagnifier() {\n    var magnCtx = magnifierCanvasRef.current.getContext('2d');\n    magnCtx.clearRect(0, 0, magnifierCanvasRef.current.width, magnifierCanvasRef.current.height);\n  };\n\n  useEffect(function () {\n    if (onChange) {\n      onChange(_extends({}, cropPoints, {\n        loading: loading\n      }));\n    }\n  }, [cropPoints, loading]);\n  useEffect(function () {\n    var bootstrap = function bootstrap() {\n      try {\n        return Promise.resolve(readFile(image)).then(function (src) {\n          return Promise.resolve(createCanvas(src)).then(function () {\n            showPreview();\n            detectContours();\n            setLoading(false);\n          });\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n\n    if (image && previewCanvasRef.current && cvLoaded && mode === 'crop') {\n      bootstrap();\n    } else {\n      setLoading(true);\n    }\n  }, [image, previewCanvasRef.current, cvLoaded, mode]);\n  var onDrag = useCallback(function (position, area) {\n    var x = position.x,\n        y = position.y;\n    var magnCtx = magnifierCanvasRef.current.getContext('2d');\n    clearMagnifier();\n    magnCtx.drawImage(previewCanvasRef.current, x - (pointSize - 10), y - (pointSize - 10), pointSize + 5, pointSize + 5, x + 10, y - 90, pointSize + 20, pointSize + 20);\n    setCropPoints(function (cPs) {\n      var _extends2;\n\n      return _extends({}, cPs, (_extends2 = {}, _extends2[area] = {\n        x: x,\n        y: y\n      }, _extends2));\n    });\n  }, []);\n  var onStop = useCallback(function (position, area, cropPoints) {\n    var x = position.x,\n        y = position.y;\n    clearMagnifier();\n    setCropPoints(function (cPs) {\n      var _extends3;\n\n      return _extends({}, cPs, (_extends3 = {}, _extends3[area] = {\n        x: x,\n        y: y\n      }, _extends3));\n    });\n\n    if (onDragStop) {\n      var _extends4;\n\n      onDragStop(_extends({}, cropPoints, (_extends4 = {}, _extends4[area] = {\n        x: x,\n        y: y\n      }, _extends4)));\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: _extends({\n      position: 'relative'\n    }, previewDims && buildImgContainerStyle(previewDims))\n  }, previewDims && mode === 'crop' && cropPoints && /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(CropPoints, {\n    pointSize: pointSize,\n    pointBgColor: pointBgColor,\n    pointBorder: pointBorder,\n    cropPoints: cropPoints,\n    previewDims: previewDims,\n    onDrag: onDrag,\n    onStop: onStop,\n    bounds: {\n      left: (previewCanvasRef === null || previewCanvasRef === void 0 ? void 0 : (_previewCanvasRef$cur = previewCanvasRef.current) === null || _previewCanvasRef$cur === void 0 ? void 0 : _previewCanvasRef$cur.offsetLeft) - pointSize / 2,\n      top: (previewCanvasRef === null || previewCanvasRef === void 0 ? void 0 : (_previewCanvasRef$cur2 = previewCanvasRef.current) === null || _previewCanvasRef$cur2 === void 0 ? void 0 : _previewCanvasRef$cur2.offsetTop) - pointSize / 2,\n      right: (previewCanvasRef === null || previewCanvasRef === void 0 ? void 0 : (_previewCanvasRef$cur3 = previewCanvasRef.current) === null || _previewCanvasRef$cur3 === void 0 ? void 0 : _previewCanvasRef$cur3.offsetLeft) - pointSize / 2 + (previewCanvasRef === null || previewCanvasRef === void 0 ? void 0 : (_previewCanvasRef$cur4 = previewCanvasRef.current) === null || _previewCanvasRef$cur4 === void 0 ? void 0 : _previewCanvasRef$cur4.offsetWidth),\n      bottom: (previewCanvasRef === null || previewCanvasRef === void 0 ? void 0 : (_previewCanvasRef$cur5 = previewCanvasRef.current) === null || _previewCanvasRef$cur5 === void 0 ? void 0 : _previewCanvasRef$cur5.offsetTop) - pointSize / 2 + (previewCanvasRef === null || previewCanvasRef === void 0 ? void 0 : (_previewCanvasRef$cur6 = previewCanvasRef.current) === null || _previewCanvasRef$cur6 === void 0 ? void 0 : _previewCanvasRef$cur6.offsetHeight)\n    }\n  }), /*#__PURE__*/React.createElement(CropPointsDelimiters, {\n    previewDims: previewDims,\n    cropPoints: cropPoints,\n    lineWidth: lineWidth,\n    lineColor: lineColor,\n    pointSize: pointSize\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    style: {\n      position: 'absolute',\n      zIndex: 5,\n      pointerEvents: 'none'\n    },\n    width: previewDims.width,\n    height: previewDims.height,\n    ref: magnifierCanvasRef\n  })), /*#__PURE__*/React.createElement(\"canvas\", {\n    style: {\n      zIndex: 5,\n      pointerEvents: 'none'\n    },\n    ref: previewCanvasRef\n  }));\n};\n\nCanvas.propTypes = {\n  image: T.object.isRequired,\n  onDragStop: T.func,\n  onChange: T.func,\n  cropperRef: T.shape({\n    current: T.shape({\n      done: T.func.isRequired,\n      backToCrop: T.func.isRequired\n    })\n  }),\n  pointSize: T.number,\n  lineWidth: T.number,\n  pointBgColor: T.string,\n  pointBorder: T.string,\n  lineColor: T.string\n};\nvar Cropper = React.forwardRef(function (props, ref) {\n  if (!props.image) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(OpenCvProvider, {\n    openCvPath: props.openCvPath\n  }, /*#__PURE__*/React.createElement(Canvas, _extends({}, props, {\n    cropperRef: ref\n  })));\n});\nCropper.propTypes = {\n  openCvPath: T.string\n};\nexport default Cropper;","map":{"version":3,"sources":["../src/lib/utils.js","../src/lib/CropPoint.js","../src/lib/CropPoints.js","../src/lib/imgManipulation.js","../src/lib/CropPointsDelimiters.js","../src/lib/Canvas.js","../src/components/Cropper.js"],"names":["readFile","file","reader","resolve","reject","Promise","calcDims","ratio","width","maxWidth","externalMaxWidth","window","maxHeight","externalMaxHeight","calculated","height","Math","buildCropPointStyle","backgroundColor","border","borderRadius","position","zIndex","CropPoint","cropPoints","pointArea","defaultPosition","pointSize","pointBgColor","pointBorder","onStop","externalOnStop","onDrag","externalOnDrag","bounds","useCallback","x","y","T","number","isRequired","func","CropPoints","previewDims","otherProps","props","transform","dst","cv","bR","bL","tR","tL","sourceCoordinates","point","destCoordinates","Ms","Md","transformMatrix","dsize","setPreviewPaneDimensions","applyFilter","options","blur","th","thMode","thMeanCorrection","thBlockSize","thMax","grayScale","ksize","CropPointsDelimiters","lineWidth","lineColor","canvas","useRef","clearCanvas","ctx","sortPoints","sortOrder","drawShape","point1","point2","point3","point4","useEffect","sortedPoints","buildImgContainerStyle","imageDimensions","Canvas","image","onDragStop","onChange","cropperRef","cvLoaded","useOpenCv","canvasRef","previewCanvasRef","magnifierCanvasRef","setPreviewDims","useState","setCropPoints","loading","setLoading","mode","setMode","useImperativeHandle","backToCrop","done","opts","blob","showPreview","newPreviewDims","imageResizeRatio","createCanvas","img","document","src","detectContours","contours","hierarchy","rect","Object","contourCoordinates","clearMagnifier","magnCtx","bootstrap","left","top","right","bottom","pointerEvents","current","string","Cropper","openCvPath","ref"],"mappings":"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","sourcesContent":["export const readFile = (file) => {\n  if (file instanceof File) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.onload = (event) => {\n        resolve(reader.result)\n      }\n      reader.onerror = (err) => {\n        reject(err)\n      }\n      reader.readAsDataURL(file)\n    })\n  }\n  if (typeof file === 'string') {\n    return Promise.resolve(file)\n  }\n}\n\nexport const calcDims = (\n  width,\n  height,\n  externalMaxWidth,\n  externalMaxHeight\n) => {\n  const ratio = width / height\n\n  const maxWidth = externalMaxWidth || window.innerWidth\n  const maxHeight = externalMaxHeight || window.innerHeight\n  const calculated = {\n    width: maxWidth,\n    height: Math.round(maxWidth / ratio),\n    ratio: ratio\n  }\n\n  if (calculated.height > maxHeight) {\n    calculated.height = maxHeight\n    calculated.width = Math.round(maxHeight * ratio)\n  }\n  return calculated\n}\n","import React, { useCallback } from 'react'\nimport Draggable from 'react-draggable'\nimport T from 'prop-types'\n\nconst buildCropPointStyle = (size, pointBgColor, pointBorder) => ({\n  width: size,\n  height: size,\n  backgroundColor: pointBgColor,\n  border: pointBorder,\n  borderRadius: '100%',\n  position: 'absolute',\n  zIndex: 1001\n})\n\nconst CropPoint = ({\n  cropPoints,\n  pointArea,\n  defaultPosition,\n  pointSize,\n  pointBgColor = 'transparent',\n  pointBorder = '4px solid #3cabe2',\n  onStop: externalOnStop,\n  onDrag: externalOnDrag,\n  bounds\n}) => {\n  const onDrag = useCallback(\n    (_, position) => {\n      externalOnDrag(\n        {\n          ...position,\n          x: position.x + pointSize / 2,\n          y: position.y + pointSize / 2\n        },\n        pointArea\n      )\n    },\n    [externalOnDrag]\n  )\n\n  const onStop = useCallback(\n    (_, position) => {\n      externalOnStop(\n        {\n          ...position,\n          x: position.x + pointSize / 2,\n          y: position.y + pointSize / 2\n        },\n        pointArea,\n        cropPoints\n      )\n    },\n    [externalOnDrag, cropPoints]\n  )\n\n  return (\n    <Draggable\n      bounds={bounds}\n      defaultPosition={defaultPosition}\n      position={{\n        x: cropPoints[pointArea].x - pointSize / 2,\n        y: cropPoints[pointArea].y - pointSize / 2\n      }}\n      onDrag={onDrag}\n      onStop={onStop}\n    >\n      <div style={buildCropPointStyle(pointSize, pointBgColor, pointBorder)} />\n    </Draggable>\n  )\n}\n\nexport default CropPoint\n\nCropPoint.propTypes = {\n  cropPoints: T.shape({\n    'left-top': T.shape({ x: T.number, y: T.number }).isRequired,\n    'right-top': T.shape({ x: T.number, y: T.number }).isRequired,\n    'right-bottom': T.shape({ x: T.number, y: T.number }).isRequired,\n    'left-bottom': T.shape({ x: T.number, y: T.number }).isRequired\n  }),\n  pointArea: T.oneOf(['left-top', 'right-top', 'right-bottom', 'left-bottom']),\n  defaultPosition: T.shape({\n    x: T.number,\n    y: T.number\n  }),\n  pointSize: T.number,\n  pointBgColor: T.string,\n  pointBorder: T.string,\n  onStop: T.func,\n  onDrag: T.func\n}\n","import React, { Fragment } from 'react'\nimport CropPoint from './CropPoint'\nimport T from 'prop-types'\n\nconst CropPoints = (props) => {\n  const { previewDims, ...otherProps } = props\n  return (\n    <>\n      <CropPoint\n        pointArea='left-top'\n        defaultPosition={{ x: 0, y: 0 }}\n        {...otherProps}\n      />\n      <CropPoint\n        pointArea='right-top'\n        defaultPosition={{ x: previewDims.width, y: 0 }}\n        {...otherProps}\n      />\n      <CropPoint\n        pointArea='right-bottom'\n        defaultPosition={{ x: 0, y: previewDims.height }}\n        {...otherProps}\n      />\n      <CropPoint\n        pointArea='left-bottom'\n        defaultPosition={{\n          x: previewDims.width,\n          y: previewDims.height\n        }}\n        {...otherProps}\n      />\n    </>\n  )\n}\n\nexport default CropPoints\n\nCropPoints.propTypes = {\n  previewDims: T.shape({\n    ratio: T.number,\n    width: T.number,\n    height: T.number\n  })\n}\n","export const transform = (\n  cv,\n  docCanvas,\n  cropPoints,\n  imageResizeRatio,\n  setPreviewPaneDimensions\n) => {\n  const dst = cv.imread(docCanvas)\n\n  const bR = cropPoints['right-bottom']\n  const bL = cropPoints['left-bottom']\n  const tR = cropPoints['right-top']\n  const tL = cropPoints['left-top']\n\n  // create source coordinates matrix\n  const sourceCoordinates = [tL, tR, bR, bL].map((point) => [\n    point.x / imageResizeRatio,\n    point.y / imageResizeRatio\n  ])\n\n  // get max width\n  const maxWidth = Math.max(bR.x - bL.x, tR.x - tL.x) / imageResizeRatio\n  // get max height\n  const maxHeight = Math.max(bL.y - tL.y, bR.y - tR.y) / imageResizeRatio\n\n  // create dest coordinates matrix\n  const destCoordinates = [\n    [0, 0],\n    [maxWidth - 1, 0],\n    [maxWidth - 1, maxHeight - 1],\n    [0, maxHeight - 1]\n  ]\n\n  // convert to open cv matrix objects\n  const Ms = cv.matFromArray(4, 1, cv.CV_32FC2, [].concat(...sourceCoordinates))\n  const Md = cv.matFromArray(4, 1, cv.CV_32FC2, [].concat(...destCoordinates))\n  const transformMatrix = cv.getPerspectiveTransform(Ms, Md)\n  // set new image size\n  const dsize = new cv.Size(maxWidth, maxHeight)\n  // perform warp\n  cv.warpPerspective(\n    dst,\n    dst,\n    transformMatrix,\n    dsize,\n    cv.INTER_LINEAR,\n    cv.BORDER_CONSTANT,\n    new cv.Scalar()\n  )\n  cv.imshow(docCanvas, dst)\n\n  dst.delete()\n  Ms.delete()\n  Md.delete()\n  transformMatrix.delete()\n\n  setPreviewPaneDimensions()\n}\n\nexport const applyFilter = async (cv, docCanvas, filterCvParams) => {\n  // default options\n  const options = {\n    blur: false,\n    th: true,\n    thMode: cv.ADAPTIVE_THRESH_MEAN_C,\n    thMeanCorrection: 15,\n    thBlockSize: 25,\n    thMax: 255,\n    grayScale: true,\n    ...filterCvParams\n  }\n  const dst = cv.imread(docCanvas)\n\n  if (options.grayScale) {\n    cv.cvtColor(dst, dst, cv.COLOR_RGBA2GRAY, 0)\n  }\n  if (options.blur) {\n    const ksize = new cv.Size(5, 5)\n    cv.GaussianBlur(dst, dst, ksize, 0, 0, cv.BORDER_DEFAULT)\n  }\n  if (options.th) {\n    if (options.grayScale) {\n      cv.adaptiveThreshold(\n        dst,\n        dst,\n        options.thMax,\n        options.thMode,\n        cv.THRESH_BINARY,\n        options.thBlockSize,\n        options.thMeanCorrection\n      )\n    } else {\n      dst.convertTo(dst, -1, 1, 60)\n      cv.threshold(dst, dst, 170, 255, cv.THRESH_BINARY)\n    }\n  }\n  cv.imshow(docCanvas, dst)\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport T from 'prop-types'\n\nconst CropPointsDelimiters = ({\n  cropPoints,\n  previewDims,\n  lineWidth = 3,\n  lineColor = '#3cabe2',\n  pointSize\n}) => {\n  const canvas = useRef()\n\n  const clearCanvas = useCallback(() => {\n    const ctx = canvas.current.getContext('2d')\n    ctx.clearRect(0, 0, previewDims.width, previewDims.height)\n  }, [canvas.current, previewDims])\n\n  const sortPoints = useCallback(() => {\n    const sortOrder = ['left-top', 'right-top', 'right-bottom', 'left-bottom']\n    return sortOrder.reduce(\n      (acc, pointPos) => [...acc, cropPoints[pointPos]],\n      []\n    )\n  }, [cropPoints])\n\n  const drawShape = useCallback(\n    ([point1, point2, point3, point4]) => {\n      const ctx = canvas.current.getContext('2d')\n      ctx.lineWidth = lineWidth\n      ctx.strokeStyle = lineColor\n\n      ctx.beginPath()\n      ctx.moveTo(point1.x + pointSize / 2, point1.y)\n      ctx.lineTo(point2.x - pointSize / 2, point2.y)\n\n      ctx.moveTo(point2.x, point2.y + pointSize / 2)\n      ctx.lineTo(point3.x, point3.y - pointSize / 2)\n\n      ctx.moveTo(point3.x - pointSize / 2, point3.y)\n      ctx.lineTo(point4.x + pointSize / 2, point4.y)\n\n      ctx.moveTo(point4.x, point4.y - pointSize / 2)\n      ctx.lineTo(point1.x, point1.y + pointSize / 2)\n      ctx.closePath()\n      ctx.stroke()\n    },\n    [canvas.current]\n  )\n\n  useEffect(() => {\n    if (cropPoints && canvas.current) {\n      clearCanvas()\n      const sortedPoints = sortPoints()\n      drawShape(sortedPoints)\n    }\n  }, [cropPoints, canvas.current])\n\n  return (\n    <canvas\n      ref={canvas}\n      style={{\n        position: 'absolute',\n        zIndex: 5\n      }}\n      width={previewDims.width}\n      height={previewDims.height}\n    />\n  )\n}\n\nexport default CropPointsDelimiters\n\nCropPointsDelimiters.propTypes = {\n  previewDims: T.shape({\n    ratio: T.number,\n    width: T.number,\n    height: T.number\n  }),\n  cropPoints: T.shape({\n    'left-top': T.shape({ x: T.number, y: T.number }).isRequired,\n    'right-top': T.shape({ x: T.number, y: T.number }).isRequired,\n    'right-bottom': T.shape({ x: T.number, y: T.number }).isRequired,\n    'left-bottom': T.shape({ x: T.number, y: T.number }).isRequired\n  }),\n  lineColor: T.string,\n  lineWidth: T.number,\n  pointSize: T.number\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n  Fragment\n} from 'react'\nimport { useOpenCv } from 'opencv-react'\nimport T from 'prop-types'\n\nimport { calcDims, readFile } from '../lib/utils'\nimport CropPoints from '../lib/CropPoints'\nimport { applyFilter, transform } from '../lib/imgManipulation'\nimport CropPointsDelimiters from './CropPointsDelimiters'\n\nconst buildImgContainerStyle = (previewDims) => ({\n  width: previewDims.width,\n  height: previewDims.height\n})\n\nconst imageDimensions = { width: 0, height: 0 }\nlet imageResizeRatio\n\nconst Canvas = ({\n  image,\n  onDragStop,\n  onChange,\n  cropperRef,\n  pointSize = 30,\n  lineWidth,\n  pointBgColor,\n  pointBorder,\n  lineColor,\n  maxWidth,\n  maxHeight\n}) => {\n  const { loaded: cvLoaded, cv } = useOpenCv()\n  const canvasRef = useRef()\n  const previewCanvasRef = useRef()\n  const magnifierCanvasRef = useRef()\n  const [previewDims, setPreviewDims] = useState()\n  const [cropPoints, setCropPoints] = useState()\n  const [loading, setLoading] = useState(false)\n  const [mode, setMode] = useState('crop')\n\n  useImperativeHandle(cropperRef, () => ({\n    backToCrop: () => {\n      setMode('crop')\n    },\n    done: async (opts = {}) => {\n      return new Promise((resolve) => {\n        setLoading(true)\n        transform(\n          cv,\n          canvasRef.current,\n          cropPoints,\n          imageResizeRatio,\n          setPreviewPaneDimensions\n        )\n        applyFilter(cv, canvasRef.current, opts.filterCvParams)\n        if (opts.preview) {\n          setMode('preview')\n        }\n        canvasRef.current.toBlob((blob) => {\n          blob.name = image.name\n          resolve(blob)\n          setLoading(false)\n        }, image.type)\n      })\n    }\n  }))\n\n  useEffect(() => {\n    if (mode === 'preview') {\n      showPreview()\n    }\n  }, [mode])\n\n  const setPreviewPaneDimensions = () => {\n    // set preview pane dimensions\n    const newPreviewDims = calcDims(\n      canvasRef.current.width,\n      canvasRef.current.height,\n      maxWidth,\n      maxHeight\n    )\n    setPreviewDims(newPreviewDims)\n\n    previewCanvasRef.current.width = newPreviewDims.width\n    previewCanvasRef.current.height = newPreviewDims.height\n\n    imageResizeRatio = newPreviewDims.width / canvasRef.current.width\n  }\n\n  const createCanvas = (src) => {\n    return new Promise((resolve, reject) => {\n      const img = document.createElement('img')\n      img.onload = async () => {\n        // set edited image canvas and dimensions\n        canvasRef.current = document.createElement('canvas')\n        canvasRef.current.width = img.width\n        canvasRef.current.height = img.height\n        const ctx = canvasRef.current.getContext('2d')\n        ctx.drawImage(img, 0, 0)\n        imageDimensions.width = canvasRef.current.width\n        imageDimensions.height = canvasRef.current.height\n        setPreviewPaneDimensions()\n        resolve()\n      }\n      img.src = src\n    })\n  }\n\n  const showPreview = (image) => {\n    const src = image || cv.imread(canvasRef.current)\n    const dst = new cv.Mat()\n    const dsize = new cv.Size(0, 0)\n    cv.resize(\n      src,\n      dst,\n      dsize,\n      imageResizeRatio,\n      imageResizeRatio,\n      cv.INTER_AREA\n    )\n    cv.imshow(previewCanvasRef.current, dst)\n    src.delete()\n    dst.delete()\n  }\n\n  const detectContours = () => {\n    const dst = cv.imread(canvasRef.current)\n    const ksize = new cv.Size(5, 5)\n    // convert the image to grayscale, blur it, and find edges in the image\n    cv.cvtColor(dst, dst, cv.COLOR_RGBA2GRAY, 0)\n    cv.GaussianBlur(dst, dst, ksize, 0, 0, cv.BORDER_DEFAULT)\n    cv.Canny(dst, dst, 75, 200)\n    // find contours\n    cv.threshold(dst, dst, 120, 200, cv.THRESH_BINARY)\n    const contours = new cv.MatVector()\n    const hierarchy = new cv.Mat()\n    cv.findContours(\n      dst,\n      contours,\n      hierarchy,\n      cv.RETR_CCOMP,\n      cv.CHAIN_APPROX_SIMPLE\n    )\n    const rect = cv.boundingRect(dst)\n    dst.delete()\n    hierarchy.delete()\n    contours.delete()\n    // transform the rectangle into a set of points\n    Object.keys(rect).forEach((key) => {\n      rect[key] = rect[key] * imageResizeRatio\n    })\n\n    const contourCoordinates = {\n      'left-top': { x: rect.x, y: rect.y },\n      'right-top': { x: rect.x + rect.width, y: rect.y },\n      'right-bottom': {\n        x: rect.x + rect.width,\n        y: rect.y + rect.height\n      },\n      'left-bottom': { x: rect.x, y: rect.y + rect.height }\n    }\n\n    setCropPoints(contourCoordinates)\n  }\n\n  const clearMagnifier = () => {\n    const magnCtx = magnifierCanvasRef.current.getContext('2d')\n    magnCtx.clearRect(\n      0,\n      0,\n      magnifierCanvasRef.current.width,\n      magnifierCanvasRef.current.height\n    )\n  }\n\n  useEffect(() => {\n    if (onChange) {\n      onChange({ ...cropPoints, loading })\n    }\n  }, [cropPoints, loading])\n\n  useEffect(() => {\n    const bootstrap = async () => {\n      const src = await readFile(image)\n      await createCanvas(src)\n      showPreview()\n      detectContours()\n      setLoading(false)\n    }\n\n    if (image && previewCanvasRef.current && cvLoaded && mode === 'crop') {\n      bootstrap()\n    } else {\n      setLoading(true)\n    }\n  }, [image, previewCanvasRef.current, cvLoaded, mode])\n\n  const onDrag = useCallback((position, area) => {\n    const { x, y } = position\n\n    const magnCtx = magnifierCanvasRef.current.getContext('2d')\n    clearMagnifier()\n\n    // TODO we should make those 5, 10 and 20 values proportionate\n    // to the point size\n    magnCtx.drawImage(\n      previewCanvasRef.current,\n      x - (pointSize - 10),\n      y - (pointSize - 10),\n      pointSize + 5,\n      pointSize + 5,\n      x + 10,\n      y - 90,\n      pointSize + 20,\n      pointSize + 20\n    )\n\n    setCropPoints((cPs) => ({ ...cPs, [area]: { x, y } }))\n  }, [])\n\n  const onStop = useCallback((position, area, cropPoints) => {\n    const { x, y } = position\n    clearMagnifier()\n    setCropPoints((cPs) => ({ ...cPs, [area]: { x, y } }))\n    if (onDragStop) {\n      onDragStop({ ...cropPoints, [area]: { x, y } })\n    }\n  }, [])\n\n  return (\n    <div\n      style={{\n        position: 'relative',\n        ...(previewDims && buildImgContainerStyle(previewDims))\n      }}\n    >\n      {previewDims && mode === 'crop' && cropPoints && (\n        <Fragment>\n          <CropPoints\n            pointSize={pointSize}\n            pointBgColor={pointBgColor}\n            pointBorder={pointBorder}\n            cropPoints={cropPoints}\n            previewDims={previewDims}\n            onDrag={onDrag}\n            onStop={onStop}\n            bounds={{\n              left: previewCanvasRef?.current?.offsetLeft - pointSize / 2,\n              top: previewCanvasRef?.current?.offsetTop - pointSize / 2,\n              right:\n                previewCanvasRef?.current?.offsetLeft -\n                pointSize / 2 +\n                previewCanvasRef?.current?.offsetWidth,\n              bottom:\n                previewCanvasRef?.current?.offsetTop -\n                pointSize / 2 +\n                previewCanvasRef?.current?.offsetHeight\n            }}\n          />\n          <CropPointsDelimiters\n            previewDims={previewDims}\n            cropPoints={cropPoints}\n            lineWidth={lineWidth}\n            lineColor={lineColor}\n            pointSize={pointSize}\n          />\n          <canvas\n            style={{\n              position: 'absolute',\n              zIndex: 5,\n              pointerEvents: 'none'\n            }}\n            width={previewDims.width}\n            height={previewDims.height}\n            ref={magnifierCanvasRef}\n          />\n        </Fragment>\n      )}\n\n      <canvas\n        style={{ zIndex: 5, pointerEvents: 'none' }}\n        ref={previewCanvasRef}\n      />\n    </div>\n  )\n}\n\nexport default Canvas\n\nCanvas.propTypes = {\n  image: T.object.isRequired,\n  onDragStop: T.func,\n  onChange: T.func,\n  cropperRef: T.shape({\n    current: T.shape({\n      done: T.func.isRequired,\n      backToCrop: T.func.isRequired\n    })\n  }),\n  pointSize: T.number,\n  lineWidth: T.number,\n  pointBgColor: T.string,\n  pointBorder: T.string,\n  lineColor: T.string\n}\n","import React from 'react'\nimport { OpenCvProvider } from 'opencv-react'\nimport Canvas from '../lib/Canvas'\nimport T from 'prop-types'\n\nconst Cropper = React.forwardRef((props, ref) => {\n  if (!props.image) {\n    return null\n  }\n\n  return (\n    <OpenCvProvider openCvPath={props.openCvPath}>\n      <Canvas {...props} cropperRef={ref} />\n    </OpenCvProvider>\n  )\n})\n\nexport default Cropper\n\nCropper.propTypes = {\n  openCvPath: T.string\n}\n"]},"metadata":{},"sourceType":"module"}