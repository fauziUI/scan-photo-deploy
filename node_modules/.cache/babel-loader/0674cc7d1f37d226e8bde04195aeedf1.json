{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\1414\\\\Downloads\\\\example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\1414\\\\Downloads\\\\example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\1414\\\\Downloads\\\\example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\1414\\\\Downloads\\\\example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\1414\\\\Downloads\\\\example\\\\src\\\\Scanner.js\";\n\nimport React, { useCallback, useRef, useState } from \"react\";\nimport { Button, Spin } from \"antd\";\nimport { CheckOutlined } from \"@ant-design/icons\";\nimport Cropper from \"react-perspective-cropper\"; // import { saveAs } from \"file-saver\";\n\nimport \"./App.css\";\n\nvar Scanner = function Scanner(_ref) {\n  var data = _ref.data,\n      setData = _ref.setData,\n      img = _ref.img,\n      setImg = _ref.setImg,\n      id = _ref.id;\n  var title = \"\";\n\n  switch (id) {\n    case \"0\":\n      title = \"ID Card\";\n      break;\n\n    case \"1\":\n      title = \"Driving Licence\";\n      break;\n\n    case \"2\":\n      title = \"Vaccine Certificate\";\n      break;\n\n    case \"3\":\n      title = \"Visa\";\n      break;\n\n    default:\n      break;\n  }\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      cropState = _useState2[0],\n      setCropState = _useState2[1];\n\n  var cropperRef = useRef();\n  var onDragStop = useCallback(function (s) {\n    return setCropState(s);\n  }, []);\n  var onChange = useCallback(function (s) {\n    return setCropState(s);\n  }, []);\n\n  var doSomething = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"CropState\", cropState);\n              _context.prev = 1;\n              _context.next = 4;\n              return cropperRef.current.done({\n                preview: true,\n                filterCvParams: {\n                  thMeanCorrection: 13,\n                  thMode: window.cv.ADAPTIVE_THRESH_GAUSSIAN_C\n                }\n              });\n\n            case 4:\n              res = _context.sent;\n              console.log(title);\n              setData([].concat(_toConsumableArray(data), [{\n                title: title,\n                photo: URL.createObjectURL(res)\n              }]));\n              setImg(undefined);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(\"error\", _context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function doSomething() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // const downloadImage = () => {\n  //   saveAs(res, \"scan-photo.png\");\n  // };\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"root-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, cropState && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: doSomething,\n    icon: /*#__PURE__*/React.createElement(CheckOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 49\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Done\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      cropperRef.current.backToCrop();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(Cropper, {\n    openCvPath: \"./opencv/opencv.js\",\n    ref: cropperRef,\n    image: img,\n    onChange: onChange,\n    onDragStop: onDragStop,\n    maxWidth: window.innerWidth - 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), (cropState === null || cropState === void 0 ? void 0 : cropState.loading) && /*#__PURE__*/React.createElement(Spin, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 32\n    }\n  })));\n};\n\nexport default Scanner;","map":{"version":3,"sources":["C:/Users/1414/Downloads/example/src/Scanner.js"],"names":["React","useCallback","useRef","useState","Button","Spin","CheckOutlined","Cropper","Scanner","data","setData","img","setImg","id","title","cropState","setCropState","cropperRef","onDragStop","s","onChange","doSomething","console","log","current","done","preview","filterCvParams","thMeanCorrection","thMode","window","cv","ADAPTIVE_THRESH_GAUSSIAN_C","res","photo","URL","createObjectURL","undefined","backToCrop","innerWidth","loading"],"mappings":"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","sourcesContent":["import React, { useCallback, useRef, useState } from \"react\";\r\nimport { Button, Spin } from \"antd\";\r\nimport { CheckOutlined } from \"@ant-design/icons\";\r\nimport Cropper from \"react-perspective-cropper\";\r\n// import { saveAs } from \"file-saver\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst Scanner = ({ data, setData, img, setImg, id }) => {\r\n  let title = \"\";\r\n  switch (id) {\r\n    case \"0\":\r\n      title = \"ID Card\";\r\n      break;\r\n    case \"1\":\r\n      title = \"Driving Licence\";\r\n      break;\r\n    case \"2\":\r\n      title = \"Vaccine Certificate\";\r\n      break;\r\n    case \"3\":\r\n      title = \"Visa\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  const [cropState, setCropState] = useState();\r\n  const cropperRef = useRef();\r\n\r\n  const onDragStop = useCallback((s) => setCropState(s), []);\r\n  const onChange = useCallback((s) => setCropState(s), []);\r\n\r\n  const doSomething = async () => {\r\n    console.log(\"CropState\", cropState);\r\n    try {\r\n      const res = await cropperRef.current.done({\r\n        preview: true,\r\n        filterCvParams: {\r\n          thMeanCorrection: 13,\r\n          thMode: window.cv.ADAPTIVE_THRESH_GAUSSIAN_C,\r\n        },\r\n      });\r\n      console.log(title);\r\n      setData([...data, { title: title, photo: URL.createObjectURL(res) }]);\r\n      setImg(undefined);\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n\r\n  // const downloadImage = () => {\r\n  //   saveAs(res, \"scan-photo.png\");\r\n  // };\r\n\r\n  return (\r\n    <div className=\"root-container\">\r\n      <div className=\"content-container\">\r\n        {cropState && (\r\n          <div className=\"buttons-container\">\r\n            <Button onClick={doSomething} icon={<CheckOutlined />}>\r\n              Done\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                cropperRef.current.backToCrop();\r\n              }}\r\n            >\r\n              Back\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <Cropper\r\n          openCvPath=\"./opencv/opencv.js\"\r\n          ref={cropperRef}\r\n          image={img}\r\n          onChange={onChange}\r\n          onDragStop={onDragStop}\r\n          maxWidth={window.innerWidth - 10}\r\n        />\r\n        {cropState?.loading && <Spin />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scanner;\r\n"]},"metadata":{},"sourceType":"module"}